<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>cocuh's blog</title><link href="https://cocuh.github.io/" rel="alternate"></link><link href="https://cocuh.github.io/feeds/all.atom.xml" rel="self"></link><id>https://cocuh.github.io/</id><updated>2016-08-07T16:16:00+09:00</updated><entry><title>Hatena blogからpelicanに移行した</title><link href="https://cocuh.github.io/articles/2016/08/07/start-blog/index-ja.html" rel="alternate"></link><published>2016-08-07T16:16:00+09:00</published><author><name>cocuh</name></author><id>tag:cocuh.github.io,2016-08-07:articles/2016/08/07/start-blog/index-ja.html</id><summary type="html">&lt;!-- :summary: Short version for index and feeds
:modified: 2016-08-07 16:16
:slug: my-super-post --&gt;
&lt;p&gt;少し前までHatena blogを使っていましたが，数式関連がかなりつらかったのでgithub pagesとpelicanに移行しました．
hatena blogには，これまでありがとうございましたという気持ちです．&lt;/p&gt;
&lt;p&gt;ちょっとpelicanにも不満があるのでいづれ自分でblog generatorを作る気がします．&lt;/p&gt;

&lt;div class="section" id="hatena-blog"&gt;
&lt;h2&gt;なんでHatena blogが不満だったか&lt;/h2&gt;
&lt;p&gt;hatenaの人が見てくれることもすこし期待して．&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 自動リンク&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;hatena blogには自動リンク機能があります．
関連ワードにリンクはる機能ですけど，余計なところにlinkを貼ったりして厄介です．
proだとこの機能を切れるらしいですが，proにするほど使わないし．月額500円はちょっとたかい．&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 数式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;hatena記法には数式書ける方法がありますが，markdownでは使えないので，mathjaxを使っています．
mathjaxだと1行に複数書くとうまく動かなったり，mathjaxの中で自動リンクが働くとmathjaxが適用されなくなったります．
なので，自動リンクされない単語で1行に複数書かないように工夫する必要があってめんどくさいです．
machine learningとかやっていると数式だらけになるのでストレスなく数式が書けないとつらいです．&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 投稿インターフェース&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿はwebで投稿できますが，git pushでぽいぽい投げたいという気持ちがあります．
手軽さ的には，webで書くよりいつも使っているエディターで書きたいです．&lt;/p&gt;
&lt;p&gt;hatenaにもatompubのAPIがありますが，2016年になってatompubを使いたいという気力はないです．
gitで投稿できればうれしい．&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hatena"&gt;
&lt;h2&gt;Hatenaの良いところ&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. hatena star&lt;/strong&gt;
&lt;strong&gt;2. view数のメール&lt;/strong&gt;
&lt;strong&gt;3. hatena bookmark&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;投稿のモチベーションが維持できるのでこれは非常によい．&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. subscribe&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近あんまり見なくなりましたけど，hatenaで他のblogのsubscribeができるのでたのしいです．&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 各種サイトの埋め込み&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;非常に便利&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="blog"&gt;
&lt;h2&gt;わたしがblogにもとめた要件&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 数式が書きやすい&lt;/strong&gt;
&lt;strong&gt;2. ipython notebookで投稿できる&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;machine learningの実験とかipython notebookでしてるので，それでもblogが書けるようにしたいです．
jupyter nbconvertを使うとreStructuredTextが出力できるので便利です．&lt;/p&gt;
&lt;div class="math"&gt;
\begin{equation*}
f(\mathbf{x};\mathbf{w}) = \mathbf{w}^T\mathbf{x}
\end{equation*}
&lt;/div&gt;
&lt;div class="math"&gt;
\begin{equation*}
J(\mathbf{w}) = \sum_{(\mathbf{x}, y)\in D}\left(y-f(\mathbf{x}; \mathbf{w})\right)^2+ c\|\mathbf{w}\|_1
\end{equation*}
&lt;/div&gt;
&lt;div class="math"&gt;
\begin{equation*}
\mathbf{w}^\ast = \underset{\mathbf{w}}{\mathrm{argmin}} J(\mathbf{w})
\end{equation*}
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3. gitで投稿できる&lt;/strong&gt;
&lt;strong&gt;4. デザインが簡単にcss+htmlでできる&lt;/strong&gt;
&lt;strong&gt;5. コードが綺麗にhighlightできる&lt;/strong&gt;
&lt;strong&gt;6. gist, github embedding&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;デベロッパーはこういうのが便利に使えないと生きていけないので…&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="pelican"&gt;
&lt;h2&gt;pelicanが満たしてない要件&lt;/h2&gt;
&lt;p&gt;pelicanは先の要件をすべて満たしてますが，次を満たしてないです．
なので元気がアレばstatic site generatorを作りたい．(まぁ元気があれば…)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. debugがめんどくさい&lt;/strong&gt;
&lt;strong&gt;2. shareまわり&lt;/strong&gt;
&lt;strong&gt;3. サムネイル生成&lt;/strong&gt;&lt;/p&gt;
&lt;!-- .. math::
    x^2 --&gt;
&lt;!-- inline :math:`x^2` --&gt;
&lt;/div&gt;
&lt;script type='text/javascript'&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary></entry></feed>